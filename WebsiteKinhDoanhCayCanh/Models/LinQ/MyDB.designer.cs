#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebsiteKinhDoanhCayCanh.Models.LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyCayCanh")]
	public partial class MyDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__MigrationHistory(__MigrationHistory instance);
    partial void Update__MigrationHistory(__MigrationHistory instance);
    partial void Delete__MigrationHistory(__MigrationHistory instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertCachChamSoc(CachChamSoc instance);
    partial void UpdateCachChamSoc(CachChamSoc instance);
    partial void DeleteCachChamSoc(CachChamSoc instance);
    partial void InsertCTCapNhat(CTCapNhat instance);
    partial void UpdateCTCapNhat(CTCapNhat instance);
    partial void DeleteCTCapNhat(CTCapNhat instance);
    partial void InsertCTDH(CTDH instance);
    partial void UpdateCTDH(CTDH instance);
    partial void DeleteCTDH(CTDH instance);
    partial void InsertDanhGia(DanhGia instance);
    partial void UpdateDanhGia(DanhGia instance);
    partial void DeleteDanhGia(DanhGia instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertHinhAnhSP(HinhAnhSP instance);
    partial void UpdateHinhAnhSP(HinhAnhSP instance);
    partial void DeleteHinhAnhSP(HinhAnhSP instance);
    partial void InsertNhomSP(NhomSP instance);
    partial void UpdateNhomSP(NhomSP instance);
    partial void DeleteNhomSP(NhomSP instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertThongTinThemVeSP(ThongTinThemVeSP instance);
    partial void UpdateThongTinThemVeSP(ThongTinThemVeSP instance);
    partial void DeleteThongTinThemVeSP(ThongTinThemVeSP instance);
    partial void InsertUserClaim(UserClaim instance);
    partial void UpdateUserClaim(UserClaim instance);
    partial void DeleteUserClaim(UserClaim instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserVoucher(UserVoucher instance);
    partial void UpdateUserVoucher(UserVoucher instance);
    partial void DeleteUserVoucher(UserVoucher instance);
    #endregion
		
		public MyDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__MigrationHistory> @__MigrationHistories
		{
			get
			{
				return this.GetTable<@__MigrationHistory>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<CachChamSoc> CachChamSocs
		{
			get
			{
				return this.GetTable<CachChamSoc>();
			}
		}
		
		public System.Data.Linq.Table<CTCapNhat> CTCapNhats
		{
			get
			{
				return this.GetTable<CTCapNhat>();
			}
		}
		
		public System.Data.Linq.Table<CTDH> CTDHs
		{
			get
			{
				return this.GetTable<CTDH>();
			}
		}
		
		public System.Data.Linq.Table<DanhGia> DanhGias
		{
			get
			{
				return this.GetTable<DanhGia>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<HinhAnhSP> HinhAnhSPs
		{
			get
			{
				return this.GetTable<HinhAnhSP>();
			}
		}
		
		public System.Data.Linq.Table<NhomSP> NhomSPs
		{
			get
			{
				return this.GetTable<NhomSP>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinThemVeSP> ThongTinThemVeSPs
		{
			get
			{
				return this.GetTable<ThongTinThemVeSP>();
			}
		}
		
		public System.Data.Linq.Table<UserClaim> UserClaims
		{
			get
			{
				return this.GetTable<UserClaim>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserVoucher> UserVouchers
		{
			get
			{
				return this.GetTable<UserVoucher>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[__MigrationHistory]")]
	public partial class @__MigrationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MigrationId;
		
		private string _ContextKey;
		
		private System.Data.Linq.Binary _Model;
		
		private string _ProductVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMigrationIdChanging(string value);
    partial void OnMigrationIdChanged();
    partial void OnContextKeyChanging(string value);
    partial void OnContextKeyChanged();
    partial void OnModelChanging(System.Data.Linq.Binary value);
    partial void OnModelChanged();
    partial void OnProductVersionChanging(string value);
    partial void OnProductVersionChanged();
    #endregion
		
		public @__MigrationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationId", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MigrationId
		{
			get
			{
				return this._MigrationId;
			}
			set
			{
				if ((this._MigrationId != value))
				{
					this.OnMigrationIdChanging(value);
					this.SendPropertyChanging();
					this._MigrationId = value;
					this.SendPropertyChanged("MigrationId");
					this.OnMigrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextKey", DbType="NVarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ContextKey
		{
			get
			{
				return this._ContextKey;
			}
			set
			{
				if ((this._ContextKey != value))
				{
					this.OnContextKeyChanging(value);
					this.SendPropertyChanging();
					this._ContextKey = value;
					this.SendPropertyChanged("ContextKey");
					this.OnContextKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVersion", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ProductVersion
		{
			get
			{
				return this._ProductVersion;
			}
			set
			{
				if ((this._ProductVersion != value))
				{
					this.OnProductVersionChanging(value);
					this.SendPropertyChanging();
					this._ProductVersion = value;
					this.SendPropertyChanged("ProductVersion");
					this.OnProductVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_voucher;
		
		private string _tenVoucher;
		
		private string _noiDung;
		
		private System.Nullable<int> _phanTramGiamGia;
		
		private System.Nullable<System.DateTime> _thoiGianBatDau;
		
		private System.Nullable<System.DateTime> _thoiGianKetThuc;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<UserVoucher> _UserVouchers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_voucherChanging(string value);
    partial void Onid_voucherChanged();
    partial void OntenVoucherChanging(string value);
    partial void OntenVoucherChanged();
    partial void OnnoiDungChanging(string value);
    partial void OnnoiDungChanged();
    partial void OnphanTramGiamGiaChanging(System.Nullable<int> value);
    partial void OnphanTramGiamGiaChanged();
    partial void OnthoiGianBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnthoiGianBatDauChanged();
    partial void OnthoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnthoiGianKetThucChanged();
    #endregion
		
		public Voucher()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._UserVouchers = new EntitySet<UserVoucher>(new Action<UserVoucher>(this.attach_UserVouchers), new Action<UserVoucher>(this.detach_UserVouchers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_voucher", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_voucher
		{
			get
			{
				return this._id_voucher;
			}
			set
			{
				if ((this._id_voucher != value))
				{
					this.Onid_voucherChanging(value);
					this.SendPropertyChanging();
					this._id_voucher = value;
					this.SendPropertyChanged("id_voucher");
					this.Onid_voucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenVoucher", DbType="NVarChar(50)")]
		public string tenVoucher
		{
			get
			{
				return this._tenVoucher;
			}
			set
			{
				if ((this._tenVoucher != value))
				{
					this.OntenVoucherChanging(value);
					this.SendPropertyChanging();
					this._tenVoucher = value;
					this.SendPropertyChanged("tenVoucher");
					this.OntenVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(250)")]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this.OnnoiDungChanging(value);
					this.SendPropertyChanging();
					this._noiDung = value;
					this.SendPropertyChanged("noiDung");
					this.OnnoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phanTramGiamGia", DbType="Int")]
		public System.Nullable<int> phanTramGiamGia
		{
			get
			{
				return this._phanTramGiamGia;
			}
			set
			{
				if ((this._phanTramGiamGia != value))
				{
					this.OnphanTramGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._phanTramGiamGia = value;
					this.SendPropertyChanged("phanTramGiamGia");
					this.OnphanTramGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoiGianBatDau", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> thoiGianBatDau
		{
			get
			{
				return this._thoiGianBatDau;
			}
			set
			{
				if ((this._thoiGianBatDau != value))
				{
					this.OnthoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._thoiGianBatDau = value;
					this.SendPropertyChanged("thoiGianBatDau");
					this.OnthoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoiGianKetThuc", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> thoiGianKetThuc
		{
			get
			{
				return this._thoiGianKetThuc;
			}
			set
			{
				if ((this._thoiGianKetThuc != value))
				{
					this.OnthoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._thoiGianKetThuc = value;
					this.SendPropertyChanged("thoiGianKetThuc");
					this.OnthoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_DonHang", Storage="_DonHangs", ThisKey="id_voucher", OtherKey="id_Voucher")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_UserVoucher", Storage="_UserVouchers", ThisKey="id_voucher", OtherKey="id_voucher")]
		public EntitySet<UserVoucher> UserVouchers
		{
			get
			{
				return this._UserVouchers;
			}
			set
			{
				this._UserVouchers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
		
		private void attach_UserVouchers(UserVoucher entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_UserVouchers(UserVoucher entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_BinhLuan;
		
		private System.Nullable<System.DateTime> _ngayDangBinhLuan;
		
		private string _noiDung;
		
		private string _trangThai;
		
		private string _id_User;
		
		private string _id_SP;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_BinhLuanChanging(int value);
    partial void Onid_BinhLuanChanged();
    partial void OnngayDangBinhLuanChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDangBinhLuanChanged();
    partial void OnnoiDungChanging(string value);
    partial void OnnoiDungChanged();
    partial void OntrangThaiChanging(string value);
    partial void OntrangThaiChanged();
    partial void Onid_UserChanging(string value);
    partial void Onid_UserChanged();
    partial void Onid_SPChanging(string value);
    partial void Onid_SPChanged();
    #endregion
		
		public BinhLuan()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BinhLuan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_BinhLuan
		{
			get
			{
				return this._id_BinhLuan;
			}
			set
			{
				if ((this._id_BinhLuan != value))
				{
					this.Onid_BinhLuanChanging(value);
					this.SendPropertyChanging();
					this._id_BinhLuan = value;
					this.SendPropertyChanged("id_BinhLuan");
					this.Onid_BinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDangBinhLuan", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayDangBinhLuan
		{
			get
			{
				return this._ngayDangBinhLuan;
			}
			set
			{
				if ((this._ngayDangBinhLuan != value))
				{
					this.OnngayDangBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._ngayDangBinhLuan = value;
					this.SendPropertyChanged("ngayDangBinhLuan");
					this.OnngayDangBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(250)")]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this.OnnoiDungChanging(value);
					this.SendPropertyChanging();
					this._noiDung = value;
					this.SendPropertyChanged("noiDung");
					this.OnnoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Char(10)")]
		public string trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_User", DbType="NVarChar(128)")]
		public string id_User
		{
			get
			{
				return this._id_User;
			}
			set
			{
				if ((this._id_User != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UserChanging(value);
					this.SendPropertyChanging();
					this._id_User = value;
					this.SendPropertyChanged("id_User");
					this.Onid_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SP", DbType="VarChar(10)")]
		public string id_SP
		{
			get
			{
				return this._id_SP;
			}
			set
			{
				if ((this._id_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_SPChanging(value);
					this.SendPropertyChanging();
					this._id_SP = value;
					this.SendPropertyChanged("id_SP");
					this.Onid_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BinhLuan", Storage="_SanPham", ThisKey="id_SP", OtherKey="id_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._id_SP = value.id_SP;
					}
					else
					{
						this._id_SP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BinhLuan", Storage="_User", ThisKey="id_User", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._id_User = value.Id;
					}
					else
					{
						this._id_User = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CachChamSoc")]
	public partial class CachChamSoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_CCS;
		
		private string _tuoiNuoc;
		
		private string _dat;
		
		private string _anhSang;
		
		private string _viTriDatCay;
		
		private string _duongChat;
		
		private string _tenCCS;
		
		private EntitySet<NhomSP> _NhomSPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_CCSChanging(string value);
    partial void Onid_CCSChanged();
    partial void OntuoiNuocChanging(string value);
    partial void OntuoiNuocChanged();
    partial void OndatChanging(string value);
    partial void OndatChanged();
    partial void OnanhSangChanging(string value);
    partial void OnanhSangChanged();
    partial void OnviTriDatCayChanging(string value);
    partial void OnviTriDatCayChanged();
    partial void OnduongChatChanging(string value);
    partial void OnduongChatChanged();
    partial void OntenCCSChanging(string value);
    partial void OntenCCSChanged();
    #endregion
		
		public CachChamSoc()
		{
			this._NhomSPs = new EntitySet<NhomSP>(new Action<NhomSP>(this.attach_NhomSPs), new Action<NhomSP>(this.detach_NhomSPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_CCS", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_CCS
		{
			get
			{
				return this._id_CCS;
			}
			set
			{
				if ((this._id_CCS != value))
				{
					this.Onid_CCSChanging(value);
					this.SendPropertyChanging();
					this._id_CCS = value;
					this.SendPropertyChanged("id_CCS");
					this.Onid_CCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tuoiNuoc", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string tuoiNuoc
		{
			get
			{
				return this._tuoiNuoc;
			}
			set
			{
				if ((this._tuoiNuoc != value))
				{
					this.OntuoiNuocChanging(value);
					this.SendPropertyChanging();
					this._tuoiNuoc = value;
					this.SendPropertyChanged("tuoiNuoc");
					this.OntuoiNuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dat", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string dat
		{
			get
			{
				return this._dat;
			}
			set
			{
				if ((this._dat != value))
				{
					this.OndatChanging(value);
					this.SendPropertyChanging();
					this._dat = value;
					this.SendPropertyChanged("dat");
					this.OndatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anhSang", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string anhSang
		{
			get
			{
				return this._anhSang;
			}
			set
			{
				if ((this._anhSang != value))
				{
					this.OnanhSangChanging(value);
					this.SendPropertyChanging();
					this._anhSang = value;
					this.SendPropertyChanged("anhSang");
					this.OnanhSangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_viTriDatCay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string viTriDatCay
		{
			get
			{
				return this._viTriDatCay;
			}
			set
			{
				if ((this._viTriDatCay != value))
				{
					this.OnviTriDatCayChanging(value);
					this.SendPropertyChanging();
					this._viTriDatCay = value;
					this.SendPropertyChanged("viTriDatCay");
					this.OnviTriDatCayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duongChat", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string duongChat
		{
			get
			{
				return this._duongChat;
			}
			set
			{
				if ((this._duongChat != value))
				{
					this.OnduongChatChanging(value);
					this.SendPropertyChanging();
					this._duongChat = value;
					this.SendPropertyChanged("duongChat");
					this.OnduongChatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenCCS", DbType="NVarChar(50)")]
		public string tenCCS
		{
			get
			{
				return this._tenCCS;
			}
			set
			{
				if ((this._tenCCS != value))
				{
					this.OntenCCSChanging(value);
					this.SendPropertyChanging();
					this._tenCCS = value;
					this.SendPropertyChanged("tenCCS");
					this.OntenCCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CachChamSoc_NhomSP", Storage="_NhomSPs", ThisKey="id_CCS", OtherKey="id_CCS")]
		public EntitySet<NhomSP> NhomSPs
		{
			get
			{
				return this._NhomSPs;
			}
			set
			{
				this._NhomSPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhomSPs(NhomSP entity)
		{
			this.SendPropertyChanging();
			entity.CachChamSoc = this;
		}
		
		private void detach_NhomSPs(NhomSP entity)
		{
			this.SendPropertyChanging();
			entity.CachChamSoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTCapNhat")]
	public partial class CTCapNhat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_CTCN;
		
		private string _id_User;
		
		private string _id_SP;
		
		private System.Nullable<System.DateTime> _ngayCapNhat;
		
		private string _thaoTac;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_CTCNChanging(long value);
    partial void Onid_CTCNChanged();
    partial void Onid_UserChanging(string value);
    partial void Onid_UserChanged();
    partial void Onid_SPChanging(string value);
    partial void Onid_SPChanged();
    partial void OnngayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnngayCapNhatChanged();
    partial void OnthaoTacChanging(string value);
    partial void OnthaoTacChanged();
    #endregion
		
		public CTCapNhat()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_CTCN", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_CTCN
		{
			get
			{
				return this._id_CTCN;
			}
			set
			{
				if ((this._id_CTCN != value))
				{
					this.Onid_CTCNChanging(value);
					this.SendPropertyChanging();
					this._id_CTCN = value;
					this.SendPropertyChanged("id_CTCN");
					this.Onid_CTCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_User", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string id_User
		{
			get
			{
				return this._id_User;
			}
			set
			{
				if ((this._id_User != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UserChanging(value);
					this.SendPropertyChanging();
					this._id_User = value;
					this.SendPropertyChanged("id_User");
					this.Onid_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string id_SP
		{
			get
			{
				return this._id_SP;
			}
			set
			{
				if ((this._id_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_SPChanging(value);
					this.SendPropertyChanging();
					this._id_SP = value;
					this.SendPropertyChanged("id_SP");
					this.Onid_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayCapNhat
		{
			get
			{
				return this._ngayCapNhat;
			}
			set
			{
				if ((this._ngayCapNhat != value))
				{
					this.OnngayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._ngayCapNhat = value;
					this.SendPropertyChanged("ngayCapNhat");
					this.OnngayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thaoTac", DbType="NVarChar(50)")]
		public string thaoTac
		{
			get
			{
				return this._thaoTac;
			}
			set
			{
				if ((this._thaoTac != value))
				{
					this.OnthaoTacChanging(value);
					this.SendPropertyChanging();
					this._thaoTac = value;
					this.SendPropertyChanged("thaoTac");
					this.OnthaoTacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTCapNhat", Storage="_SanPham", ThisKey="id_SP", OtherKey="id_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CTCapNhats.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CTCapNhats.Add(this);
						this._id_SP = value.id_SP;
					}
					else
					{
						this._id_SP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CTCapNhat", Storage="_User", ThisKey="id_User", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CTCapNhats.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CTCapNhats.Add(this);
						this._id_User = value.Id;
					}
					else
					{
						this._id_User = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDH")]
	public partial class CTDH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_DH;
		
		private string _id_SP;
		
		private System.Nullable<int> _soLuong;
		
		private System.Nullable<long> _thanhTien;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_DHChanging(int value);
    partial void Onid_DHChanged();
    partial void Onid_SPChanging(string value);
    partial void Onid_SPChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    partial void OnthanhTienChanging(System.Nullable<long> value);
    partial void OnthanhTienChanged();
    #endregion
		
		public CTDH()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_DH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_DH
		{
			get
			{
				return this._id_DH;
			}
			set
			{
				if ((this._id_DH != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_DHChanging(value);
					this.SendPropertyChanging();
					this._id_DH = value;
					this.SendPropertyChanged("id_DH");
					this.Onid_DHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_SP
		{
			get
			{
				return this._id_SP;
			}
			set
			{
				if ((this._id_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_SPChanging(value);
					this.SendPropertyChanging();
					this._id_SP = value;
					this.SendPropertyChanged("id_SP");
					this.Onid_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhTien", DbType="BigInt")]
		public System.Nullable<long> thanhTien
		{
			get
			{
				return this._thanhTien;
			}
			set
			{
				if ((this._thanhTien != value))
				{
					this.OnthanhTienChanging(value);
					this.SendPropertyChanging();
					this._thanhTien = value;
					this.SendPropertyChanged("thanhTien");
					this.OnthanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CTDH", Storage="_DonHang", ThisKey="id_DH", OtherKey="id_DH", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.CTDHs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.CTDHs.Add(this);
						this._id_DH = value.id_DH;
					}
					else
					{
						this._id_DH = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTDH", Storage="_SanPham", ThisKey="id_SP", OtherKey="id_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CTDHs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CTDHs.Add(this);
						this._id_SP = value.id_SP;
					}
					else
					{
						this._id_SP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGia")]
	public partial class DanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_DanhGia;
		
		private System.Nullable<int> _soSao;
		
		private System.Nullable<System.DateTime> _ngayDG;
		
		private System.Nullable<char> _trangThai;
		
		private string _id_User;
		
		private string _id_SP;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_DanhGiaChanging(int value);
    partial void Onid_DanhGiaChanged();
    partial void OnsoSaoChanging(System.Nullable<int> value);
    partial void OnsoSaoChanged();
    partial void OnngayDGChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDGChanged();
    partial void OntrangThaiChanging(System.Nullable<char> value);
    partial void OntrangThaiChanged();
    partial void Onid_UserChanging(string value);
    partial void Onid_UserChanged();
    partial void Onid_SPChanging(string value);
    partial void Onid_SPChanged();
    #endregion
		
		public DanhGia()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_DanhGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_DanhGia
		{
			get
			{
				return this._id_DanhGia;
			}
			set
			{
				if ((this._id_DanhGia != value))
				{
					this.Onid_DanhGiaChanging(value);
					this.SendPropertyChanging();
					this._id_DanhGia = value;
					this.SendPropertyChanged("id_DanhGia");
					this.Onid_DanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soSao", DbType="Int")]
		public System.Nullable<int> soSao
		{
			get
			{
				return this._soSao;
			}
			set
			{
				if ((this._soSao != value))
				{
					this.OnsoSaoChanging(value);
					this.SendPropertyChanging();
					this._soSao = value;
					this.SendPropertyChanged("soSao");
					this.OnsoSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDG", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayDG
		{
			get
			{
				return this._ngayDG;
			}
			set
			{
				if ((this._ngayDG != value))
				{
					this.OnngayDGChanging(value);
					this.SendPropertyChanging();
					this._ngayDG = value;
					this.SendPropertyChanged("ngayDG");
					this.OnngayDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Char(1)")]
		public System.Nullable<char> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_User", DbType="NVarChar(128)")]
		public string id_User
		{
			get
			{
				return this._id_User;
			}
			set
			{
				if ((this._id_User != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UserChanging(value);
					this.SendPropertyChanging();
					this._id_User = value;
					this.SendPropertyChanged("id_User");
					this.Onid_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SP", DbType="VarChar(10)")]
		public string id_SP
		{
			get
			{
				return this._id_SP;
			}
			set
			{
				if ((this._id_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_SPChanging(value);
					this.SendPropertyChanging();
					this._id_SP = value;
					this.SendPropertyChanged("id_SP");
					this.Onid_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DanhGia", Storage="_SanPham", ThisKey="id_SP", OtherKey="id_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._id_SP = value.id_SP;
					}
					else
					{
						this._id_SP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DanhGia", Storage="_User", ThisKey="id_User", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._id_User = value.Id;
					}
					else
					{
						this._id_User = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_DH;
		
		private System.Nullable<System.DateTime> _ngayDat;
		
		private System.Nullable<System.DateTime> _ngayGiao;
		
		private System.Nullable<bool> _trangThaiThanhToan;
		
		private System.Nullable<char> _trangThaiGiaoHang;
		
		private System.Nullable<char> _phuongThucThanhToan;
		
		private System.Nullable<long> _tongTien;
		
		private string _diaChiGiao;
		
		private string _id_User;
		
		private string _id_Voucher;
		
		private EntitySet<CTDH> _CTDHs;
		
		private EntityRef<Voucher> _Voucher;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_DHChanging(int value);
    partial void Onid_DHChanged();
    partial void OnngayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDatChanged();
    partial void OnngayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnngayGiaoChanged();
    partial void OntrangThaiThanhToanChanging(System.Nullable<bool> value);
    partial void OntrangThaiThanhToanChanged();
    partial void OntrangThaiGiaoHangChanging(System.Nullable<char> value);
    partial void OntrangThaiGiaoHangChanged();
    partial void OnphuongThucThanhToanChanging(System.Nullable<char> value);
    partial void OnphuongThucThanhToanChanged();
    partial void OntongTienChanging(System.Nullable<long> value);
    partial void OntongTienChanged();
    partial void OndiaChiGiaoChanging(string value);
    partial void OndiaChiGiaoChanged();
    partial void Onid_UserChanging(string value);
    partial void Onid_UserChanged();
    partial void Onid_VoucherChanging(string value);
    partial void Onid_VoucherChanged();
    #endregion
		
		public DonHang()
		{
			this._CTDHs = new EntitySet<CTDH>(new Action<CTDH>(this.attach_CTDHs), new Action<CTDH>(this.detach_CTDHs));
			this._Voucher = default(EntityRef<Voucher>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_DH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_DH
		{
			get
			{
				return this._id_DH;
			}
			set
			{
				if ((this._id_DH != value))
				{
					this.Onid_DHChanging(value);
					this.SendPropertyChanging();
					this._id_DH = value;
					this.SendPropertyChanged("id_DH");
					this.Onid_DHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDat", DbType="Date")]
		public System.Nullable<System.DateTime> ngayDat
		{
			get
			{
				return this._ngayDat;
			}
			set
			{
				if ((this._ngayDat != value))
				{
					this.OnngayDatChanging(value);
					this.SendPropertyChanging();
					this._ngayDat = value;
					this.SendPropertyChanged("ngayDat");
					this.OnngayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayGiao", DbType="Date")]
		public System.Nullable<System.DateTime> ngayGiao
		{
			get
			{
				return this._ngayGiao;
			}
			set
			{
				if ((this._ngayGiao != value))
				{
					this.OnngayGiaoChanging(value);
					this.SendPropertyChanging();
					this._ngayGiao = value;
					this.SendPropertyChanged("ngayGiao");
					this.OnngayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThaiThanhToan", DbType="Bit")]
		public System.Nullable<bool> trangThaiThanhToan
		{
			get
			{
				return this._trangThaiThanhToan;
			}
			set
			{
				if ((this._trangThaiThanhToan != value))
				{
					this.OntrangThaiThanhToanChanging(value);
					this.SendPropertyChanging();
					this._trangThaiThanhToan = value;
					this.SendPropertyChanged("trangThaiThanhToan");
					this.OntrangThaiThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThaiGiaoHang", DbType="Char(1)")]
		public System.Nullable<char> trangThaiGiaoHang
		{
			get
			{
				return this._trangThaiGiaoHang;
			}
			set
			{
				if ((this._trangThaiGiaoHang != value))
				{
					this.OntrangThaiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._trangThaiGiaoHang = value;
					this.SendPropertyChanged("trangThaiGiaoHang");
					this.OntrangThaiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phuongThucThanhToan", DbType="Char(1)")]
		public System.Nullable<char> phuongThucThanhToan
		{
			get
			{
				return this._phuongThucThanhToan;
			}
			set
			{
				if ((this._phuongThucThanhToan != value))
				{
					this.OnphuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._phuongThucThanhToan = value;
					this.SendPropertyChanged("phuongThucThanhToan");
					this.OnphuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongTien", DbType="BigInt")]
		public System.Nullable<long> tongTien
		{
			get
			{
				return this._tongTien;
			}
			set
			{
				if ((this._tongTien != value))
				{
					this.OntongTienChanging(value);
					this.SendPropertyChanging();
					this._tongTien = value;
					this.SendPropertyChanged("tongTien");
					this.OntongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChiGiao", DbType="NVarChar(250)")]
		public string diaChiGiao
		{
			get
			{
				return this._diaChiGiao;
			}
			set
			{
				if ((this._diaChiGiao != value))
				{
					this.OndiaChiGiaoChanging(value);
					this.SendPropertyChanging();
					this._diaChiGiao = value;
					this.SendPropertyChanged("diaChiGiao");
					this.OndiaChiGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_User", DbType="NVarChar(128)")]
		public string id_User
		{
			get
			{
				return this._id_User;
			}
			set
			{
				if ((this._id_User != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UserChanging(value);
					this.SendPropertyChanging();
					this._id_User = value;
					this.SendPropertyChanged("id_User");
					this.Onid_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Voucher", DbType="VarChar(10)")]
		public string id_Voucher
		{
			get
			{
				return this._id_Voucher;
			}
			set
			{
				if ((this._id_Voucher != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_VoucherChanging(value);
					this.SendPropertyChanging();
					this._id_Voucher = value;
					this.SendPropertyChanged("id_Voucher");
					this.Onid_VoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CTDH", Storage="_CTDHs", ThisKey="id_DH", OtherKey="id_DH")]
		public EntitySet<CTDH> CTDHs
		{
			get
			{
				return this._CTDHs;
			}
			set
			{
				this._CTDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_DonHang", Storage="_Voucher", ThisKey="id_Voucher", OtherKey="id_voucher", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._id_Voucher = value.id_voucher;
					}
					else
					{
						this._id_Voucher = default(string);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DonHang", Storage="_User", ThisKey="id_User", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._id_User = value.Id;
					}
					else
					{
						this._id_User = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDHs(CTDH entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_CTDHs(CTDH entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HinhAnhSP")]
	public partial class HinhAnhSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Hinh;
		
		private string _duongDan;
		
		private string _id_SP;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_HinhChanging(int value);
    partial void Onid_HinhChanged();
    partial void OnduongDanChanging(string value);
    partial void OnduongDanChanged();
    partial void Onid_SPChanging(string value);
    partial void Onid_SPChanged();
    #endregion
		
		public HinhAnhSP()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Hinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Hinh
		{
			get
			{
				return this._id_Hinh;
			}
			set
			{
				if ((this._id_Hinh != value))
				{
					this.Onid_HinhChanging(value);
					this.SendPropertyChanging();
					this._id_Hinh = value;
					this.SendPropertyChanged("id_Hinh");
					this.Onid_HinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duongDan", DbType="VarChar(250)")]
		public string duongDan
		{
			get
			{
				return this._duongDan;
			}
			set
			{
				if ((this._duongDan != value))
				{
					this.OnduongDanChanging(value);
					this.SendPropertyChanging();
					this._duongDan = value;
					this.SendPropertyChanged("duongDan");
					this.OnduongDanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SP", DbType="VarChar(10)")]
		public string id_SP
		{
			get
			{
				return this._id_SP;
			}
			set
			{
				if ((this._id_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_SPChanging(value);
					this.SendPropertyChanging();
					this._id_SP = value;
					this.SendPropertyChanged("id_SP");
					this.Onid_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HinhAnhSP", Storage="_SanPham", ThisKey="id_SP", OtherKey="id_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.HinhAnhSPs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.HinhAnhSPs.Add(this);
						this._id_SP = value.id_SP;
					}
					else
					{
						this._id_SP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomSP")]
	public partial class NhomSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_Nhom;
		
		private string _tenNhom;
		
		private string _id_CCS;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntityRef<CachChamSoc> _CachChamSoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_NhomChanging(string value);
    partial void Onid_NhomChanged();
    partial void OntenNhomChanging(string value);
    partial void OntenNhomChanged();
    partial void Onid_CCSChanging(string value);
    partial void Onid_CCSChanged();
    #endregion
		
		public NhomSP()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._CachChamSoc = default(EntityRef<CachChamSoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Nhom", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Nhom
		{
			get
			{
				return this._id_Nhom;
			}
			set
			{
				if ((this._id_Nhom != value))
				{
					this.Onid_NhomChanging(value);
					this.SendPropertyChanging();
					this._id_Nhom = value;
					this.SendPropertyChanged("id_Nhom");
					this.Onid_NhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNhom", DbType="NVarChar(50)")]
		public string tenNhom
		{
			get
			{
				return this._tenNhom;
			}
			set
			{
				if ((this._tenNhom != value))
				{
					this.OntenNhomChanging(value);
					this.SendPropertyChanging();
					this._tenNhom = value;
					this.SendPropertyChanged("tenNhom");
					this.OntenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_CCS", DbType="VarChar(10)")]
		public string id_CCS
		{
			get
			{
				return this._id_CCS;
			}
			set
			{
				if ((this._id_CCS != value))
				{
					if (this._CachChamSoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_CCSChanging(value);
					this.SendPropertyChanging();
					this._id_CCS = value;
					this.SendPropertyChanged("id_CCS");
					this.Onid_CCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomSP_SanPham", Storage="_SanPhams", ThisKey="id_Nhom", OtherKey="id_Nhom")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CachChamSoc_NhomSP", Storage="_CachChamSoc", ThisKey="id_CCS", OtherKey="id_CCS", IsForeignKey=true)]
		public CachChamSoc CachChamSoc
		{
			get
			{
				return this._CachChamSoc.Entity;
			}
			set
			{
				CachChamSoc previousValue = this._CachChamSoc.Entity;
				if (((previousValue != value) 
							|| (this._CachChamSoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CachChamSoc.Entity = null;
						previousValue.NhomSPs.Remove(this);
					}
					this._CachChamSoc.Entity = value;
					if ((value != null))
					{
						value.NhomSPs.Add(this);
						this._id_CCS = value.id_CCS;
					}
					else
					{
						this._id_CCS = default(string);
					}
					this.SendPropertyChanged("CachChamSoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhomSP = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhomSP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<UserRole> _UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_SP;
		
		private string _tenSP;
		
		private string _mota;
		
		private System.Nullable<long> _gia;
		
		private System.Nullable<int> _soLuong;
		
		private string _DVT;
		
		private System.Nullable<int> _phanTramGiamGia;
		
		private string _id_Nhom;
		
		private System.Nullable<bool> _trangThai;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<CTCapNhat> _CTCapNhats;
		
		private EntitySet<CTDH> _CTDHs;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<HinhAnhSP> _HinhAnhSPs;
		
		private EntityRef<ThongTinThemVeSP> _ThongTinThemVeSP;
		
		private EntityRef<NhomSP> _NhomSP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_SPChanging(string value);
    partial void Onid_SPChanged();
    partial void OntenSPChanging(string value);
    partial void OntenSPChanged();
    partial void OnmotaChanging(string value);
    partial void OnmotaChanged();
    partial void OngiaChanging(System.Nullable<long> value);
    partial void OngiaChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnphanTramGiamGiaChanging(System.Nullable<int> value);
    partial void OnphanTramGiamGiaChanged();
    partial void Onid_NhomChanging(string value);
    partial void Onid_NhomChanged();
    partial void OntrangThaiChanging(System.Nullable<bool> value);
    partial void OntrangThaiChanged();
    #endregion
		
		public SanPham()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._CTCapNhats = new EntitySet<CTCapNhat>(new Action<CTCapNhat>(this.attach_CTCapNhats), new Action<CTCapNhat>(this.detach_CTCapNhats));
			this._CTDHs = new EntitySet<CTDH>(new Action<CTDH>(this.attach_CTDHs), new Action<CTDH>(this.detach_CTDHs));
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._HinhAnhSPs = new EntitySet<HinhAnhSP>(new Action<HinhAnhSP>(this.attach_HinhAnhSPs), new Action<HinhAnhSP>(this.detach_HinhAnhSPs));
			this._ThongTinThemVeSP = default(EntityRef<ThongTinThemVeSP>);
			this._NhomSP = default(EntityRef<NhomSP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_SP
		{
			get
			{
				return this._id_SP;
			}
			set
			{
				if ((this._id_SP != value))
				{
					this.Onid_SPChanging(value);
					this.SendPropertyChanging();
					this._id_SP = value;
					this.SendPropertyChanged("id_SP");
					this.Onid_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenSP", DbType="NVarChar(50)")]
		public string tenSP
		{
			get
			{
				return this._tenSP;
			}
			set
			{
				if ((this._tenSP != value))
				{
					this.OntenSPChanging(value);
					this.SendPropertyChanging();
					this._tenSP = value;
					this.SendPropertyChanged("tenSP");
					this.OntenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mota", DbType="NVarChar(250)")]
		public string mota
		{
			get
			{
				return this._mota;
			}
			set
			{
				if ((this._mota != value))
				{
					this.OnmotaChanging(value);
					this.SendPropertyChanging();
					this._mota = value;
					this.SendPropertyChanged("mota");
					this.OnmotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="BigInt")]
		public System.Nullable<long> gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(10)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phanTramGiamGia", DbType="Int")]
		public System.Nullable<int> phanTramGiamGia
		{
			get
			{
				return this._phanTramGiamGia;
			}
			set
			{
				if ((this._phanTramGiamGia != value))
				{
					this.OnphanTramGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._phanTramGiamGia = value;
					this.SendPropertyChanged("phanTramGiamGia");
					this.OnphanTramGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Nhom", DbType="VarChar(10)")]
		public string id_Nhom
		{
			get
			{
				return this._id_Nhom;
			}
			set
			{
				if ((this._id_Nhom != value))
				{
					if (this._NhomSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_NhomChanging(value);
					this.SendPropertyChanging();
					this._id_Nhom = value;
					this.SendPropertyChanged("id_Nhom");
					this.Onid_NhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Bit")]
		public System.Nullable<bool> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BinhLuan", Storage="_BinhLuans", ThisKey="id_SP", OtherKey="id_SP")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTCapNhat", Storage="_CTCapNhats", ThisKey="id_SP", OtherKey="id_SP")]
		public EntitySet<CTCapNhat> CTCapNhats
		{
			get
			{
				return this._CTCapNhats;
			}
			set
			{
				this._CTCapNhats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTDH", Storage="_CTDHs", ThisKey="id_SP", OtherKey="id_SP")]
		public EntitySet<CTDH> CTDHs
		{
			get
			{
				return this._CTDHs;
			}
			set
			{
				this._CTDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DanhGia", Storage="_DanhGias", ThisKey="id_SP", OtherKey="id_SP")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HinhAnhSP", Storage="_HinhAnhSPs", ThisKey="id_SP", OtherKey="id_SP")]
		public EntitySet<HinhAnhSP> HinhAnhSPs
		{
			get
			{
				return this._HinhAnhSPs;
			}
			set
			{
				this._HinhAnhSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ThongTinThemVeSP", Storage="_ThongTinThemVeSP", ThisKey="id_SP", OtherKey="id_SP", IsUnique=true, IsForeignKey=false)]
		public ThongTinThemVeSP ThongTinThemVeSP
		{
			get
			{
				return this._ThongTinThemVeSP.Entity;
			}
			set
			{
				ThongTinThemVeSP previousValue = this._ThongTinThemVeSP.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinThemVeSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinThemVeSP.Entity = null;
						previousValue.SanPham = null;
					}
					this._ThongTinThemVeSP.Entity = value;
					if ((value != null))
					{
						value.SanPham = this;
					}
					this.SendPropertyChanged("ThongTinThemVeSP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomSP_SanPham", Storage="_NhomSP", ThisKey="id_Nhom", OtherKey="id_Nhom", IsForeignKey=true)]
		public NhomSP NhomSP
		{
			get
			{
				return this._NhomSP.Entity;
			}
			set
			{
				NhomSP previousValue = this._NhomSP.Entity;
				if (((previousValue != value) 
							|| (this._NhomSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomSP.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._NhomSP.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._id_Nhom = value.id_Nhom;
					}
					else
					{
						this._id_Nhom = default(string);
					}
					this.SendPropertyChanged("NhomSP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_CTCapNhats(CTCapNhat entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CTCapNhats(CTCapNhat entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_CTDHs(CTDH entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CTDHs(CTDH entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_HinhAnhSPs(HinhAnhSP entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_HinhAnhSPs(HinhAnhSP entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongTinThemVeSP")]
	public partial class ThongTinThemVeSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_SP;
		
		private string _congDung;
		
		private string _cachTrong;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_SPChanging(string value);
    partial void Onid_SPChanged();
    partial void OncongDungChanging(string value);
    partial void OncongDungChanged();
    partial void OncachTrongChanging(string value);
    partial void OncachTrongChanged();
    #endregion
		
		public ThongTinThemVeSP()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_SP
		{
			get
			{
				return this._id_SP;
			}
			set
			{
				if ((this._id_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_SPChanging(value);
					this.SendPropertyChanging();
					this._id_SP = value;
					this.SendPropertyChanged("id_SP");
					this.Onid_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_congDung", DbType="NVarChar(255)")]
		public string congDung
		{
			get
			{
				return this._congDung;
			}
			set
			{
				if ((this._congDung != value))
				{
					this.OncongDungChanging(value);
					this.SendPropertyChanging();
					this._congDung = value;
					this.SendPropertyChanged("congDung");
					this.OncongDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cachTrong", DbType="NVarChar(255)")]
		public string cachTrong
		{
			get
			{
				return this._cachTrong;
			}
			set
			{
				if ((this._cachTrong != value))
				{
					this.OncachTrongChanging(value);
					this.SendPropertyChanging();
					this._cachTrong = value;
					this.SendPropertyChanged("cachTrong");
					this.OncachTrongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ThongTinThemVeSP", Storage="_SanPham", ThisKey="id_SP", OtherKey="id_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ThongTinThemVeSP = null;
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ThongTinThemVeSP = this;
						this._id_SP = value.id_SP;
					}
					else
					{
						this._id_SP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserClaims")]
	public partial class UserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public UserClaim()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserClaim", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserClaims.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogins")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public UserLogin()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLogin", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLogins.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UserRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _FullName;
		
		private string _Address;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<CTCapNhat> _CTCapNhats;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<UserClaim> _UserClaims;
		
		private EntitySet<UserLogin> _UserLogins;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<UserVoucher> _UserVouchers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public User()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._CTCapNhats = new EntitySet<CTCapNhat>(new Action<CTCapNhat>(this.attach_CTCapNhats), new Action<CTCapNhat>(this.detach_CTCapNhats));
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._UserClaims = new EntitySet<UserClaim>(new Action<UserClaim>(this.attach_UserClaims), new Action<UserClaim>(this.detach_UserClaims));
			this._UserLogins = new EntitySet<UserLogin>(new Action<UserLogin>(this.attach_UserLogins), new Action<UserLogin>(this.detach_UserLogins));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._UserVouchers = new EntitySet<UserVoucher>(new Action<UserVoucher>(this.attach_UserVouchers), new Action<UserVoucher>(this.detach_UserVouchers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BinhLuan", Storage="_BinhLuans", ThisKey="Id", OtherKey="id_User")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CTCapNhat", Storage="_CTCapNhats", ThisKey="Id", OtherKey="id_User")]
		public EntitySet<CTCapNhat> CTCapNhats
		{
			get
			{
				return this._CTCapNhats;
			}
			set
			{
				this._CTCapNhats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DanhGia", Storage="_DanhGias", ThisKey="Id", OtherKey="id_User")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DonHang", Storage="_DonHangs", ThisKey="Id", OtherKey="id_User")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserClaim", Storage="_UserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserClaim> UserClaims
		{
			get
			{
				return this._UserClaims;
			}
			set
			{
				this._UserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLogin", Storage="_UserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserLogin> UserLogins
		{
			get
			{
				return this._UserLogins;
			}
			set
			{
				this._UserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserVoucher", Storage="_UserVouchers", ThisKey="Id", OtherKey="id_User")]
		public EntitySet<UserVoucher> UserVouchers
		{
			get
			{
				return this._UserVouchers;
			}
			set
			{
				this._UserVouchers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CTCapNhats(CTCapNhat entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CTCapNhats(CTCapNhat entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserClaims(UserClaim entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserClaims(UserClaim entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserVouchers(UserVoucher entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserVouchers(UserVoucher entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserVoucher")]
	public partial class UserVoucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_voucher;
		
		private string _id_User;
		
		private System.Nullable<int> _soLuotConLai;
		
		private EntityRef<User> _User;
		
		private EntityRef<Voucher> _Voucher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_voucherChanging(string value);
    partial void Onid_voucherChanged();
    partial void Onid_UserChanging(string value);
    partial void Onid_UserChanged();
    partial void OnsoLuotConLaiChanging(System.Nullable<int> value);
    partial void OnsoLuotConLaiChanged();
    #endregion
		
		public UserVoucher()
		{
			this._User = default(EntityRef<User>);
			this._Voucher = default(EntityRef<Voucher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_voucher", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_voucher
		{
			get
			{
				return this._id_voucher;
			}
			set
			{
				if ((this._id_voucher != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_voucherChanging(value);
					this.SendPropertyChanging();
					this._id_voucher = value;
					this.SendPropertyChanged("id_voucher");
					this.Onid_voucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_User", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_User
		{
			get
			{
				return this._id_User;
			}
			set
			{
				if ((this._id_User != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UserChanging(value);
					this.SendPropertyChanging();
					this._id_User = value;
					this.SendPropertyChanged("id_User");
					this.Onid_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuotConLai", DbType="Int")]
		public System.Nullable<int> soLuotConLai
		{
			get
			{
				return this._soLuotConLai;
			}
			set
			{
				if ((this._soLuotConLai != value))
				{
					this.OnsoLuotConLaiChanging(value);
					this.SendPropertyChanging();
					this._soLuotConLai = value;
					this.SendPropertyChanged("soLuotConLai");
					this.OnsoLuotConLaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserVoucher", Storage="_User", ThisKey="id_User", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserVouchers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserVouchers.Add(this);
						this._id_User = value.Id;
					}
					else
					{
						this._id_User = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_UserVoucher", Storage="_Voucher", ThisKey="id_voucher", OtherKey="id_voucher", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.UserVouchers.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.UserVouchers.Add(this);
						this._id_voucher = value.id_voucher;
					}
					else
					{
						this._id_voucher = default(string);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
